scalar Date

type Message{
    message: String!
}

type Item {
    id: ID!
    username: String!
    name: String!
    money: Int!
    category: String!
    subCategory: String!
    time: Date!
    description: String
}

type Category {
    username: String!
    categories: [Categories!]!
}

type Categories {
    cat: String!
    subcat: [String!]!
}

type Query {
    items: [Item!]
    category(username: String!): Category!
}


input CreateItemInput {
    id: ID!
    username: String!
    name: String!
    money: Int!
    category: String!
    subCategory: String!
    time: Date!
    description: String
}

input UpdateItemInput {
    id: ID!
    username: String!
    name: String!
    money: Int!
    category: String!
    subCategory: String!
    time: Date!
    description: String
}

input CreateCategoryInput {
    username: String!
}

input AddNewCategoryInput {
    username: String!
    category: String!
    subCategory: String!
}

input CreateUserInput {
    username: String!
    salt: String!
    password: String!
    email: String!
}

input ValidateUserInput {
    username: String!
    password: String!
}

type Mutation {
    createItem(input: CreateItemInput!): Item
    updateItem(input: UpdateItemInput!): Item
    deleteItem(input: ID!): ID!
    createUser(input: CreateUserInput!): String!
    validateUser(input: ValidateUserInput!): String!
    createCategory(input: CreateCategoryInput!): Category
    addNewCategory(input: AddNewCategoryInput!): Category
}

type Subscription {
    itemCreated: Item!
    itemUpdated: Item!
    itemDeleted: ID!
    categoryAdded: Category!
}
